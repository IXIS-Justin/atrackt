// Generated by CoffeeScript 1.4.0

/*
Atrackt Debugging Console
@author Ryan Brewster
@version 0.0.1
*/


(function() {

  $.extend(window.Atrackt, {
    _debug: function() {
      return this._urlParams('debugTracking') === 'true';
    },
    _debugConsole: function() {
      var _this = this;
      return $(function() {
        $('body').addClass('atrackt-debug');
        $('<style>\
        body.atrackt-debug {\
          margin-top: 300px; }\
        #atrackt-debug {\
          height: 300px;\
          background-color: white;\
          width: 100%;\
          overflow-x: hidden;\
          overflow-y: scroll;\
          position: fixed;\
          top: 0;\
          left: 0;\
          border-bottom: 2px solid black; }\
        #atrackt-location {\
          border-bottom: 1px solid black;\
          padding: 5px; }\
        #atrackt-elements {\
          width: 100%; }\
        .atrackt-element.error{\
          background-color: red;\
          color: white; }\
        body.atrackt-debug .highlight {\
          background-color: green !important;\
          color: white !important; }\
        </style>').appendTo('head');
        return $('<div id="atrackt-debug">\
          <div id="atrackt-debug-content">\
            <div id="atrackt-location">Location: ' + _this._getLocation() + '</div>\
            <table class="table" id="atrackt-elements">\
              <thead><tr>\
                <th>Categories</th>\
                <th>Value</th>\
                <th>Event</th>\
                <th>Error</th>\
              </tr></thead>\
              <tbody></tbody>\
            </table>\
          </div>\
        </div>').prependTo('body');
      });
    },
    _debugEl: function($el) {
      var matchingBodyEls, matchingConsoleEls, mathingEls, _elId;
      this._getTrackObject($el);
      _elId = this._debugElementId($el);
      $el.attr('id', _elId);
      $('<tr class="atrackt-element" id=' + _elId + '>\
      <td class="atrackt-categories">' + $el.data('track-object').categories + '</td>\
      <td class="atrackt-value">' + $el.data('track-object').value + '</td>\
      <td class="atrackt-event">' + $el.data('track-object').event + '</td>\
      <td class="atrackt-error"></td>\
      </tr>').appendTo('#atrackt-elements tbody');
      mathingEls = $('body #' + _elId);
      matchingConsoleEls = mathingEls.filter('.atrackt-element');
      matchingBodyEls = mathingEls.not('.atrackt-element');
      if (matchingBodyEls.length > 1) {
        console.log('THERE ARE DUPLICATE ELEMENTS!', matchingBodyEls);
        matchingConsoleEls.addClass('error');
        matchingConsoleEls.find('.atrackt-error').append('DUPLICATE');
      }
      matchingConsoleEls.hover(function() {
        $(this).addClass('highlight');
        $el.addClass('highlight');
        return $('html, body').scrollTop($el.offset().top - $('#atrackt-debug').height() - 20);
      }, function() {
        $(this).removeClass('highlight');
        return $el.removeClass('highlight');
      });
      return $el.hover(function() {
        var elIndex, scrollTo, totalEls, viewportHeight;
        $(this).addClass('highlight');
        matchingConsoleEls.addClass('highlight');
        viewportHeight = $('#atrackt-elements tbody').height();
        totalEls = $('#atrackt-elements .atrackt-element').length;
        elIndex = $('#atrackt-elements .atrackt-element').index(matchingConsoleEls);
        scrollTo = (elIndex / totalEls) * viewportHeight;
        return $('#atrackt-debug').scrollTop(scrollTo);
      }, function() {
        $(this).removeClass('highlight');
        return matchingConsoleEls.removeClass('highlight');
      });
    },
    _debugElementId: function($el) {
      var idArray, _categories, _ctaValue, _event;
      _categories = $el.data('track-object').categories;
      _ctaValue = $el.data('track-object').value;
      _event = $el.data('track-object').event;
      idArray = [];
      if (_categories) {
        idArray.push(_categories);
      }
      if (_ctaValue) {
        idArray.push(_ctaValue);
      }
      if (_event) {
        idArray.push(_event);
      }
      return idArray.join().toLowerCase().replace(/[^\w]/g, '');
    }
  });

  if (Atrackt._debug()) {
    Atrackt._debugConsole();
  }

}).call(this);
