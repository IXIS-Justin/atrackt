// Generated by CoffeeScript 1.8.0

/*
Atrackt Omniture Plugin
https://github.com/brewster1134/atrackt
@author Ryan Brewster
@version 1.0.0
 */

(function() {
  window.Atrackt.setPlugin('omniture', {
    send: function(data, options) {
      var arg, _ref, _ref1;
      if (typeof s === 'undefined') {
        return console.error('ATRACKT ERROR: PLUGIN `omniture` - Site catalyst library not loaded');
      }
      data._categories = (_ref = data._categories) != null ? _ref.join(this.options.delimiters.category) : void 0;
      data = this.translatePropMap(data);
      this.buildSObject(data);
      if (options.page && (s.t != null)) {
        s.t();
      } else if (s.tl != null) {
        arg = ((_ref1 = options.el) != null ? _ref1.attr('href') : void 0) ? options.el[0] : true;
        s.tl(arg, options['trackingType'], this.buildLinkName(data));
      }
      return data;
    },
    options: {
      trackingType: 'o',
      charReplaceRegex: /[^\x20-\x7E]/g,
      version: 14,
      delimiters: {
        linkName: '/',
        category: '|'
      },
      linkTrackVars: ['products', 'events'],
      propMap: {
        _location: 'prop1',
        _categories: 'prop2',
        _value: 'prop3',
        _event: 'prop4'
      }
    },
    buildSObject: function(obj) {
      var key, linkTrackVars, value;
      switch (this.options.version) {
        case 14:
          linkTrackVars = this.options.linkTrackVars;
          for (key in obj) {
            value = obj[key];
            linkTrackVars.push(key);
          }
          s.linkTrackVars = linkTrackVars.join(',');
          $.extend(s, obj);
          break;
        case 15:
          s.contextData = obj;
      }
      return s;
    },
    buildLinkName: function(obj) {
      var linkName;
      linkName = [obj[this.options.propMap._location], obj[this.options.propMap._categories], obj[this.options.propMap._value]];
      return linkName.join(this.options.delimiters.linkName);
    },
    translatePropMap: function(obj) {
      var _globalData;
      if (this.options.version > 14) {
        return obj;
      }
      _globalData = {};
      $.each(obj, (function(_this) {
        return function(k, v) {
          var _base;
          return _globalData[_this.keyLookup(k)] = v != null ? typeof (_base = v.toString()).replace === "function" ? _base.replace(_this.options.charReplaceRegex, '') : void 0 : void 0;
        };
      })(this));
      return _globalData;
    },
    keyLookup: function(key) {
      var _newKey;
      _newKey = this.options.propMap[key];
      if (!_newKey) {
        console.error("ATRACKT ERROR: PLUGIN `omniture` - No mapping for `" + key + "` in omniture config");
      }
      return _newKey || key;
    }
  });

}).call(this);
